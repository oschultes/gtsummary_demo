rind_simple ~ "Rind",
color_simple ~ "Color",
fat_percent ~ "Fat percent",
vegetarian ~ "Vegetarian"),
statistic = list(all_continuous() ~ "{mean} ({sd})",    # changing continuous variables from median (iqr) to mean (sd)
all_categorical() ~ "{N} ({p})"),   # getting rid of percentage sign
digits = all_categorical() ~ 1,             # printing 1 decimal place for all categorical variables
type = list(vegetarian ~ "categorical"))    # changing vegetarian to display like a categorical variable instead of a binary one
tbl_summary(data = cheese_processed,
include = c(continent, milk_simple, firmness, rind_simple, color_simple, fat_percent, vegetarian),
label = c(continent ~ "Continent",
milk_simple ~ "Milk",
firmness ~ "Firmness",
rind_simple ~ "Rind",
color_simple ~ "Color",
fat_percent ~ "Fat percent",
vegetarian ~ "Vegetarian"),
statistic = list(all_continuous() ~ "{mean} ({sd})",    # changing continuous variables from median (iqr) to mean (sd)
all_categorical() ~ "{n} ({p})"),   # getting rid of percentage sign
digits = all_categorical() ~ 1,             # printing 1 decimal place for all categorical variables
type = list(vegetarian ~ "categorical"))    # changing vegetarian to display like a categorical variable instead of a binary one
tbl_summary(data = cheese_processed,
include = c(continent, milk_simple, firmness, rind_simple, color_simple, fat_percent, vegetarian),
label = c(continent ~ "Continent",
milk_simple ~ "Milk",
firmness ~ "Firmness",
rind_simple ~ "Rind",
color_simple ~ "Color",
fat_percent ~ "Fat percent",
vegetarian ~ "Vegetarian"),
statistic = list(all_continuous() ~ "{mean} ({sd})",    # changing continuous variables from median (iqr) to mean (sd)
all_categorical() ~ "{n} ({p})"),   # getting rid of percentage sign
digits = all_categorical() ~ 1,             # printing 1 decimal place for all categorical variables
type = list(vegetarian ~ "categorical")) |>    # changing vegetarian to display like a categorical variable instead of a binary one
remove_row_type("missing")                     # remove rows denoting how many missing values there are per variable
tbl_summary(data = cheese_processed,
include = c(continent, milk_simple, firmness, rind_simple, color_simple, fat_percent, vegetarian),
label = c(continent ~ "Continent",
milk_simple ~ "Milk",
firmness ~ "Firmness",
rind_simple ~ "Rind",
color_simple ~ "Color",
fat_percent ~ "Fat percent",
vegetarian ~ "Vegetarian"),
statistic = list(all_continuous() ~ "{mean} ({sd})",    # changing continuous variables from median (iqr) to mean (sd)
all_categorical() ~ "{n} ({p})"),   # getting rid of percentage sign
digits = all_categorical() ~ 1,             # printing 1 decimal place for all categorical variables
type = list(vegetarian ~ "categorical")) |>    # changing vegetarian to display like a categorical variable instead of a binary one
remove_row_type(type = "missing")                     # remove rows denoting how many missing values there are per variable
tbl_summary(data = cheese_processed,
include = c(continent, milk_simple, rind_simple, color_simple, fat_percent, vegetarian),
by = firmness,
label = c(continent ~ "Continent",
milk_simple ~ "Milk",
# firmness ~ "Firmness",
rind_simple ~ "Rind",
color_simple ~ "Color",
fat_percent ~ "Fat percent",
vegetarian ~ "Vegetarian")) |>
add_overall(last = TRUE)
tbl_summary(data = cheese_processed,
include = c(continent, milk_simple, rind_simple, color_simple, fat_percent, vegetarian),
by = firmness,
label = c(continent ~ "Continent",
milk_simple ~ "Milk",
# firmness ~ "Firmness",
rind_simple ~ "Rind",
color_simple ~ "Color",
fat_percent ~ "Fat percent",
vegetarian ~ "Vegetarian")) |>
remove_row_type(type = "missing") |>
add_overall(last = TRUE)
tbl_summary(data = cheese_processed,
include = c(continent, milk_simple, rind_simple, color_simple, fat_percent, vegetarian),
by = firmness,
label = c(continent ~ "Continent",
milk_simple ~ "Milk",
# firmness ~ "Firmness",
rind_simple ~ "Rind",
color_simple ~ "Color",
fat_percent ~ "Fat percent",
vegetarian ~ "Vegetarian")) |>
remove_row_type(type = "missing") |>
add_overall(last = TRUE)
tbl_summary(data = cheese_processed,
include = c(continent, milk_simple, rind_simple, color_simple, fat_percent, vegetarian),
by = firmness,
label = c(continent ~ "Continent",
milk_simple ~ "Milk",
# firmness ~ "Firmness",
rind_simple ~ "Rind",
color_simple ~ "Color",
fat_percent ~ "Fat percent",
vegetarian ~ "Vegetarian")) |>
add_overall(last = TRUE) |>
remove_row_type(type = "missing")
tbl_summary(data = cheese_processed,
include = c(continent, milk_simple, rind_simple, color_simple, fat_percent, vegetarian),
by = firmness,
label = c(continent ~ "Continent",
milk_simple ~ "Milk",
# firmness ~ "Firmness",
rind_simple ~ "Rind",
color_simple ~ "Color",
fat_percent ~ "Fat percent",
vegetarian ~ "Vegetarian"),
statistic = list(all_categorical() ~ "{n} ({p})")) |>
add_overall(last = TRUE) |>
remove_row_type(type = "missing")
tbl_summary(data = cheese_processed,
include = c(continent, milk_simple, rind_simple, color_simple, fat_percent, vegetarian),
# by = firmness,
label = c(continent ~ "Continent",
milk_simple ~ "Milk",
# firmness ~ "Firmness",
rind_simple ~ "Rind",
color_simple ~ "Color",
fat_percent ~ "Fat percent",
vegetarian ~ "Vegetarian"),
statistic = list(all_categorical() ~ "{n} ({p})")) |>
add_stat_label()
theme_gtsummary_journal("lancet")
theme_gtsummary_compact()
tbl_summary(data = cheese_processed,
include = c(continent, milk_simple, rind_simple, color_simple, fat_percent, vegetarian),
by = firmness,
label = c(continent ~ "Continent",
milk_simple ~ "Milk",
# firmness ~ "Firmness",
rind_simple ~ "Rind",
color_simple ~ "Color",
fat_percent ~ "Fat percent",
vegetarian ~ "Vegetarian"),
statistic = list(all_categorical() ~ "{n} ({p})")) |>
add_overall(last = TRUE) |>
remove_row_type(type = "missing")
theme_gtsummary_language(language = "pt")
tbl_summary(data = cheese_processed,
include = c(continent, milk_simple, rind_simple, color_simple, fat_percent, vegetarian),
by = firmness,
label = c(continent ~ "Continent",
milk_simple ~ "Milk",
# firmness ~ "Firmness",
rind_simple ~ "Rind",
color_simple ~ "Color",
fat_percent ~ "Fat percent",
vegetarian ~ "Vegetarian"),
statistic = list(all_categorical() ~ "{n} ({p})")) |>
add_overall(last = TRUE) |>
remove_row_type(type = "missing")
reset_gtsummary_theme()
?tbl_uvregression
cheese_processed |>
tbl_uvregression(method = glm,
y = fat_percent)
cheese_processed |>
tbl_uvregression(method = glm,
y = fat_percent,
x = firmness)
cheese_processed |>
tbl_uvregression(method = glm,
y = fat_percent,
include = list(firmness))
cheese_processed |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(firmness, vegetarian))
cheese_processed |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(firmness))
cheese_processed |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(firmness, milk_simple, rind_simple, vegetarian))
cheese_processed |>
mutate(milk_simple = factor(milk_simple, levels = c("cow", "camel", "goat", "moose", "multiple", "sheep", "water buffalo"))) |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(firmness, milk_simple, rind_simple, vegetarian))
cheese_processed |>
mutate(rind_simple = factor(rind_simple, levels = c("bloomy", "ash coated", "cloth or leaf wrapped", "natural", "rindless", "washed", "wax or plastic"))) |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(rind_simple))
pacman::p_load(tidyverse, gtsummary)
# read in data
cheese_processed <- read.csv("cheese_processed.csv")
cheese_processed |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(firmness))
cheese_processed |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(firmness, milk_simple, rind_simple, vegetarian))
cheese_processed |>
mutate(milk_simple = factor(milk_simple,
levels = c("cow", "camel", "goat", "moose", "multiple", "sheep", "water buffalo"),
levels = c("Cow", "Camel", "Goat", "Moose", "Multiple", "Sheep", "Water buffalo"))) |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(milk_simple))
cheese_processed |>
mutate(milk_simple = factor(milk_simple,
levels = c("cow", "camel", "goat", "moose", "multiple", "sheep", "water buffalo"),
labels = c("Cow", "Camel", "Goat", "Moose", "Multiple", "Sheep", "Water buffalo"))) |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(milk_simple))
cheese_processed |>
mutate(milk_simple = factor(milk_simple,
levels = c("cow", "camel", "goat", "moose", "multiple", "sheep", "water buffalo"),
labels = c("Cow", "Camel", "Goat", "Moose", "Multiple", "Sheep", "Water buffalo"))) |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(milk_simple),
labels = list(milk_simple ~ "Milk"))
cheese_processed |>
mutate(milk_simple = factor(milk_simple,
levels = c("cow", "camel", "goat", "moose", "multiple", "sheep", "water buffalo"),
labels = c("Cow", "Camel", "Goat", "Moose", "Multiple", "Sheep", "Water buffalo"))) |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(milk_simple),
label = c(milk_simple ~ "Milk"))
thing=cheese_processed |>
mutate(milk_simple = factor(milk_simple,
levels = c("cow", "camel", "goat", "moose", "multiple", "sheep", "water buffalo"),
labels = c("Cow", "Camel", "Goat", "Moose", "Multiple", "Sheep", "Water buffalo"))) |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(milk_simple),
label = c(milk_simple ~ "Milk"))
show_header_names(thing)
# let's try combining beta & CI into one column
cheese_processed |>
mutate(milk_simple = factor(milk_simple,
levels = c("cow", "camel", "goat", "moose", "multiple", "sheep", "water buffalo"),
labels = c("Cow", "Camel", "Goat", "Moose", "Multiple", "Sheep", "Water buffalo"))) |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(milk_simple),
label = c(milk_simple ~ "Milk")) |>
modify_table_styling(column = estimate,    # merge OR and CI into single column
rows = !is.na(estimate),
cols_merge_pattern = "{estimate} ({conf.low}, {conf.high})")
# let's try combining beta & CI into one column
cheese_processed |>
mutate(milk_simple = factor(milk_simple,
levels = c("cow", "camel", "goat", "moose", "multiple", "sheep", "water buffalo"),
labels = c("Cow", "Camel", "Goat", "Moose", "Multiple", "Sheep", "Water buffalo"))) |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(milk_simple),
label = c(milk_simple ~ "Milk")) |>
modify_table_styling(column = estimate,
# rows = !is.na(estimate),
cols_merge_pattern = "{estimate} ({conf.low}, {conf.high})")
# let's try combining beta & CI into one column
cheese_processed |>
mutate(milk_simple = factor(milk_simple,
levels = c("cow", "camel", "goat", "moose", "multiple", "sheep", "water buffalo"),
labels = c("Cow", "Camel", "Goat", "Moose", "Multiple", "Sheep", "Water buffalo"))) |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(milk_simple),
label = c(milk_simple ~ "Milk")) |>
modify_table_styling(column = estimate,
rows = !is.na(estimate),
cols_merge_pattern = "{estimate} ({conf.low}, {conf.high})") |>
modify_header(estimate ~ "**Mean difference (CI)**")
# let's try combining beta & CI into one column
cheese_processed |>
mutate(milk_simple = factor(milk_simple,
levels = c("cow", "camel", "goat", "moose", "multiple", "sheep", "water buffalo"),
labels = c("Cow", "Camel", "Goat", "Moose", "Multiple", "Sheep", "Water buffalo"))) |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(milk_simple),
label = c(milk_simple ~ "Milk")) |>
modify_table_styling(column = estimate,
rows = !is.na(estimate),
cols_merge_pattern = "{estimate} ({conf.low}, {conf.high})") |>
modify_column_hide(c(ci)) |>
modify_header(estimate ~ "**Mean difference (CI)**")
show_header_names(
cheese_processed |>
mutate(milk_simple = factor(milk_simple,
levels = c("cow", "camel", "goat", "moose", "multiple", "sheep", "water buffalo"),
labels = c("Cow", "Camel", "Goat", "Moose", "Multiple", "Sheep", "Water buffalo"))) |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(milk_simple),
label = c(milk_simple ~ "Milk"))
)
cheese_tab1 = cheese_processed |>
mutate(milk_simple = factor(milk_simple,
levels = c("cow", "camel", "goat", "moose", "multiple", "sheep", "water buffalo"),
labels = c("Cow", "Camel", "Goat", "Moose", "Multiple", "Sheep", "Water buffalo"))) |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(milk_simple),
label = c(milk_simple ~ "Milk"))
show_header_names(cheese_tab1)
# now let's make some more aesthetic changes
# combining beta & CI into one column, relabeling, and removing ci and N columns
cheese_processed |>
mutate(milk_simple = factor(milk_simple,
levels = c("cow", "camel", "goat", "moose", "multiple", "sheep", "water buffalo"),
labels = c("Cow", "Camel", "Goat", "Moose", "Multiple", "Sheep", "Water buffalo"))) |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(milk_simple),
label = c(milk_simple ~ "Milk")) |>
modify_table_styling(column = estimate,                       # combining beta and ci into 1 column
rows = !is.na(estimate),
cols_merge_pattern = "{estimate} ({conf.low}, {conf.high})") |>
modify_column_hide(c(ci, stat_n)) |>                            # hiding ci and n columns (note this data is still in the table object, just hidden)
modify_header(estimate ~ "**Mean difference (CI)**")       # new label for combined column
cheese_processed |>
mutate(milk_simple = factor(milk_simple,
levels = c("cow", "camel", "goat", "moose", "multiple", "sheep", "water buffalo"),
labels = c("Cow", "Camel", "Goat", "Moose", "Multiple", "Sheep", "Water buffalo"))) |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(milk_simple),
pvalue_fun = ~style_sigfig(., digits = 3),
label = c(milk_simple ~ "Milk")) |>
modify_table_styling(column = estimate,
rows = !is.na(estimate),
cols_merge_pattern = "{estimate} ({conf.low}, {conf.high})") |>
modify_column_hide(c(ci, stat_n)) |>
modify_header(estimate ~ "**Mean difference (CI)**")
# or maybe instead of removing N, we want to also display the number of events
cheese_processed |>
mutate(milk_simple = factor(milk_simple,
levels = c("cow", "camel", "goat", "moose", "multiple", "sheep", "water buffalo"),
labels = c("Cow", "Camel", "Goat", "Moose", "Multiple", "Sheep", "Water buffalo"))) |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(milk_simple),
label = c(milk_simple ~ "Milk")) |>
modify_table_styling(column = estimate,
rows = !is.na(estimate),
cols_merge_pattern = "{estimate} ({conf.low}, {conf.high})") |>
modify_column_hide(c(ci, stat_n)) |>
modify_header(estimate ~ "**Mean difference (CI)**") |>
add_nevent()
# if we are interested in testing an anova hypothesis for categorical predictors, we can specify this as well
cheese_processed |>
mutate(milk_simple = factor(milk_simple,
levels = c("cow", "camel", "goat", "moose", "multiple", "sheep", "water buffalo"),
labels = c("Cow", "Camel", "Goat", "Moose", "Multiple", "Sheep", "Water buffalo"))) |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(milk_simple),
pvalue_fun = ~style_sigfig(., digits = 3),   # 3 decimal places for p-value column
label = c(milk_simple ~ "Milk")) |>
modify_table_styling(column = estimate,
rows = !is.na(estimate),
cols_merge_pattern = "{estimate} ({conf.low}, {conf.high})") |>
modify_column_hide(c(ci, stat_n)) |>
modify_header(estimate ~ "**Mean difference (CI)**")   |>
add_global_p()
orcas <- readr::read_csv(
"https://raw.githubusercontent.com/jadeynryan/orcas/refs/heads/master/data-raw/cwr_tidy.csv"
)
View(orcas)
cats_uk <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2023/2023-01-31/cats_uk.csv')
cats_uk_reference <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2023/2023-01-31/cats_uk_reference.csv')
View(cats_uk)
View(cats_uk_reference)
write.csv(cats_uk_reference, "cats_uk_reference.csv", row.names = FALSE)
table(cats_uk_reference$hunt,useNA="always")
table(cats_uk_reference$prey_p_month,useNA="always")
table(cats_uk_reference$animal_reproductive_condition,useNA="always")
table(cats_uk_reference$animal_sex,useNA="always")
table(cats_uk_reference$hrs_indoors,useNA="always")
table(cats_uk_reference$n_cats,useNA="always")
table(cats_uk_reference$food_dry,useNA="always")
table(cats_uk_reference$food_wet,useNA="always")
table(cats_uk_reference$study_site,useNA="always")
table(cats_uk_reference$age_years,useNA="always")
str(cats_uk_reference)
cats_processed = cats_uk_reference |>
mutate(n_months_obs = deploy_off_date-deploy_on_date)
View(cats_processed)
cats_processed = cats_uk_reference |>
mutate(n_months_obs = datediff(deploy_off_date, deploy_on_date))
??datediff
??diffdate
cats_processed = cats_uk_reference |>
mutate(n_months_obs = difftime(deploy_off_date, deploy_on_date))
cats_processed = cats_uk_reference |>
mutate(n_months_obs = difftime(deploy_off_date, deploy_on_date, units = "mon"))
cats_processed = cats_uk_reference |>
mutate(n_months_obs = difftime(deploy_off_date, deploy_on_date, units = "weeks"))
cats_processed = cats_uk_reference |>
mutate(n_months_obs = difftime(deploy_off_date, deploy_on_date, units = "days"))
# export
write_rds(cats_processed, "cats_processed.R")
cats_processed |>
tbl_uvregression(method = glm,
y = prey_p_month,
include = c(animal_sex))
cheese_processed |>
tbl_uvregression(method = glm,
y = fat_percent,
include = c(animal_sex, hrs_indoors, food_dry, food_wet, age_years))
cats_processed |>
tbl_uvregression(method = glm,
y = prey_p_month,
include = c(animal_sex, hrs_indoors, food_dry, food_wet, age_years))
cats_processed |>
tbl_regression(model = age_years ~ prey_p_month,
# include = paste0(predictor),
pvalue_fun = ~style_sigfig(., digits = 3))
cats_processed |>
tbl_regression(model = glm(age_years ~ prey_p_month),
# include = paste0(predictor),
pvalue_fun = ~style_sigfig(., digits = 3))
cats_processed |>
tbl_regression(model = glm(age_years ~ prey_p_month, family = "gaussian"),
# include = paste0(predictor),
pvalue_fun = ~style_sigfig(., digits = 3))
tbl_regression
?tbl_regression
cats_processed |>
tbl_regression(glm(age_years ~ prey_p_month, family = "gaussian"),
# include = paste0(predictor),
pvalue_fun = ~style_sigfig(., digits = 3))
cats_processed |>
tbl_regression(glm(prey_p_month ~ age_years))
cats_processed |>
tbl_regression(glm(prey_p_month ~ age_years, data = .))
cats_processed |>
tbl_regression(glm(prey_p_month ~ age_years, data = .x))
cats_processed |>
tbl_regression(glm(prey_p_month ~ age_years, data = cats_processed))
tbl_regression(glm(prey_p_month ~ age_years, data = cats_processed))
tbl_regression(glm(prey_p_month ~ age_years, data = cats_processed, family = gaussian))
label = c(age_years ~ "Age"))
tbl_regression(glm(prey_p_month ~ age_years,
data = cats_processed,
family = gaussian),
pvalue_fun = ~style_sigfig(., digits = 3),
label = c(age_years ~ "Age"))
table(cats_processed$hunt,useNA="always")
tbl_regression(glm(hunt ~ age_years,
data = cats_processed,
family = binomial),
pvalue_fun = ~style_sigfig(., digits = 3),
label = c(age_years ~ "Age"))
tbl_regression(glm(hunt ~ age_years + sex,
data = cats_processed,
family = binomial),
pvalue_fun = ~style_sigfig(., digits = 3),
label = c(age_years ~ "Age"))
tbl_regression(glm(hunt ~ age_years + animal_sex,
data = cats_processed,
family = binomial),
pvalue_fun = ~style_sigfig(., digits = 3),
label = c(age_years ~ "Age"))
tbl_regression(glm(hunt ~ animal_sex,
data = cats_processed,
family = binomial),
pvalue_fun = ~style_sigfig(., digits = 3),
label = c(age_years ~ "Age"))
tbl_regression(glm(hunt ~ animal_sex,
data = cats_processed,
family = binomial),
pvalue_fun = ~style_sigfig(., digits = 3))
tbl_regression(glm(hunt ~ age_years + animal_sex,
data = cats_processed,
family = binomial),
pvalue_fun = ~style_sigfig(., digits = 3),
label = c(age_years ~ "Age",
animal_sex ~ "Sex"))
tbl_regression(glm(hunt ~ age_years,
data = cats_processed,
family = binomial),
exponentiate = TRUE,
pvalue_fun = ~style_sigfig(., digits = 3),
label = c(age_years ~ "Age"))
tbl_regression(glm(hunt ~ age_years + animal_sex,
data = cats_processed,
family = binomial),
exponentiate = TRUE,
pvalue_fun = ~style_sigfig(., digits = 3),
label = c(age_years ~ "Age",
animal_sex ~ "Sex"))
rm(list = ls())
if (!require(pacman)) {install.packages("pacman"); require(pacman)}
pacman::p_load(tidyverse, gtsummary, geepack)
# read in data
cheese_processed <- readRDS("cheese_processed.Rds")
cats_processed <- readRDS("cats_processed.Rds")
childcare_processed <- readRDS("childcare_processed.Rds")
geeglm(mc_infant ~ study_year,
data = childcare_processed |> filter(!is.na(mc_infant)) |> filter(str_detect(state_abbreviation, "A")==T) ,
id = state_abbreviation)
tbl_regression(geeglm(mc_infant ~ study_year + pr_f + flfpr_20to64,
data = childcare_processed |> filter(!is.na(mc_infant)) |> filter(str_detect(state_abbreviation, "A")==T),
id = state_abbreviation,
family = gaussian,
corstr = "exchangeable",
std.err = "san.se"),
pvalue_fun = ~style_sigfig(., digits = 3),
label = c(study_year ~ "Year",
pr_f ~ "Family Poverty %",
flfpr_20to64 ~ "Labor Force Participation, % Females 20-64"))
